// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "http://dl.bintray.com/tbruyelle/tbruyelle" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.0.0-alpha2'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'

        // https://github.com/evant/gradle-retrolambda
        classpath 'me.tatarka:gradle-retrolambda:3.2.4'
        // https://github.com/evant/android-retrolambda-lombok
        classpath 'me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2'
    }

    // Exclude the version that the android plugin depends on.
    configurations.classpath.exclude group: 'com.android.tools.external.lombok'
}

allprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "http://dl.bintray.com/tbruyelle/tbruyelle" }
    }

    // stfu gradle
    tasks.withType(JavaForkOptions) {
        jvmArgs '-Djava.awt.headless=true'
    }
}

def getGitCommitHash() {
    def gitFolder = "$projectDir/.git/"
    if (!new File(gitFolder + "HEAD").exists()) {
        return null
    }

    // how many characters we extract from the hash
    def takeFromHash = 6

    def head = new File(gitFolder + "HEAD").text.split(":")
    def isCommit = (head.length == 1)

    if (isCommit) {
        return head[0].trim().take(takeFromHash)
    }

    def refHead = new File(gitFolder + head[1].trim())
    return refHead.text.trim().take(takeFromHash)
}
