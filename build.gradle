// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        useGooglePlay = true
        useLocalSources = false

        gradleVersion = '2.1.0-alpha5'
    }

    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "http://dl.bintray.com/tbruyelle/tbruyelle" }
        maven { url 'https://maven.fabric.io/public' }
        flatDir { dirs 'aars' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${rootProject.ext.gradleVersion}"
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'

        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'

        // fabric
        classpath 'io.fabric.tools:gradle:1.21.5'
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "http://dl.bintray.com/tbruyelle/tbruyelle" }
        maven { url 'https://maven.fabric.io/public' }
        flatDir { dirs 'aars' }
    }
}

def getGitCommitHash() {
    def gitFolder = "$projectDir/.git/"
    if (!new File(gitFolder + "HEAD").exists()) {
        return null
    }

    // how many characters we extract from the hash
    def takeFromHash = 6

    def head = new File(gitFolder + "HEAD").text.split(":")
    def isCommit = (head.length == 1)

    if (isCommit) {
        return head[0].trim().take(takeFromHash)
    }

    def refHead = new File(gitFolder + head[1].trim())
    return refHead.text.trim().take(takeFromHash)
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
